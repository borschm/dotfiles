"
" .vimrc file
"

" =========================================================
" use Vundle for plugin management
" =========================================================
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'christoomey/vim-tmux-navigator'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ


" =========================================================
" various configurations
" =========================================================

" tell vim to keep a backup file
set backup
" tell vim where to put its backup files
set backupdir=~/.vim-tmp
" tell vim where to put swap files
set dir=~/.vim-tmp

" syntax highlighting
syntax on

" line number
set number relativenumber
augroup numbertoggle
    autocmd!
    autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu | set rnu   | endif
    autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &nu | set nornu | endif
augroup END

" set tabs
set tabstop=4
set softtabstop=4
set expandtab

" set auto indentation
set autoindent

" set search options
set hlsearch
set incsearch
set ignorecase
" hi Search cterm=NONE ctermfg=grey ctermbg=blue
hi Search cterm=NONE ctermfg=black ctermbg=green

" define colors
" highlight Normal ctermfg=white ctermbg=darkblue

" set ruler
set ruler

" tabs should not be highlighted as errors in fortran code
"highlight link fortranTab NONE

" automatically save file when changing buffer
set autowrite
" set autowriteall
" set confirm
" set hidden

" do not go to start of line when switching bufffer
set nostartofline

" no wrapping
" set nowrap

set background=dark


" =========================================================
" NERTTree config
" =========================================================
" start with NERDTree if no file spcified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" map "C-n" to open NERDTree
map <C-n> :NERDTreeToggle<CR>
" close vim if NERDTree is the last window open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif


" =========================================================
" airline
" =========================================================
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='powerlineish'
let g:airline_powerline_fonts = 1
